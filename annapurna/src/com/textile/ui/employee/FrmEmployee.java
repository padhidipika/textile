/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.textile.ui.employee;

import com.textile.controller.EmployeeController;
import com.textile.dal.hibernate.entity.employee.Employee;
import com.textile.dto.ComboItem;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author dipika.padhi
 */
public class FrmEmployee extends javax.swing.JFrame {

    private int employeeId = 0;
    
    private final EmployeeController employeeController;
    /**
     * Creates new form FrmEmployee
     */
    public FrmEmployee() {
        this.employeeController = new EmployeeController();
        initComponents();
        loadComponents();
    }
    
    
    public FrmEmployee(int employeeId) {
        this.employeeController = new EmployeeController();
        this.employeeId = employeeId;
        initComponents();
        loadComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgMachines = new javax.swing.ButtonGroup();
        lblHeader = new javax.swing.JLabel();
        pnlContent = new javax.swing.JPanel();
        pnlInfo = new javax.swing.JPanel();
        lblFirstName = new javax.swing.JLabel();
        txtFirstName = new javax.swing.JTextField();
        lblMiddleName = new javax.swing.JLabel();
        txtMiddleName = new javax.swing.JTextField();
        lblLastName = new javax.swing.JLabel();
        txtLastName = new javax.swing.JTextField();
        lblDOB = new javax.swing.JLabel();
        dtDOB = new org.jdesktop.swingx.JXDatePicker();
        lblState = new javax.swing.JLabel();
        cmbState = new javax.swing.JComboBox<>();
        lblCity = new javax.swing.JLabel();
        cmbCity = new javax.swing.JComboBox<>();
        lblAddress = new javax.swing.JLabel();
        scpAddress = new javax.swing.JScrollPane();
        txtAddress = new javax.swing.JTextArea();
        lblImage = new javax.swing.JLabel();
        lblPincode = new javax.swing.JLabel();
        lblEmailId = new javax.swing.JLabel();
        fcImage = new javax.swing.JFileChooser();
        txtEmailID = new javax.swing.JFormattedTextField();
        txtPincode = new javax.swing.JFormattedTextField();
        pnlAllocation = new javax.swing.JPanel();
        lblMachines = new javax.swing.JLabel();
        pnlMachines = new javax.swing.JPanel();
        pnlButtons = new javax.swing.JPanel();
        btnSave = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        lblError = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblHeader.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        lblHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(lblHeader, java.awt.BorderLayout.PAGE_START);

        pnlContent.setLayout(new java.awt.BorderLayout());

        lblFirstName.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblFirstName.setText("First Name :");
        lblFirstName.setPreferredSize(new java.awt.Dimension(57, 14));
        lblFirstName.setRequestFocusEnabled(false);

        lblMiddleName.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblMiddleName.setText("Middle Name :");
        lblMiddleName.setPreferredSize(new java.awt.Dimension(57, 14));
        lblMiddleName.setRequestFocusEnabled(false);

        lblLastName.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblLastName.setText("Last Name :");
        lblLastName.setRequestFocusEnabled(false);

        lblDOB.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblDOB.setText("Date Of Birth :");

        dtDOB.setToolTipText("");
        dtDOB.setLinkDay(new Date());
        dtDOB.setName(""); // NOI18N
        dtDOB.setOpaque(true);
        dtDOB.getMonthView().setUpperBound(new Date());

        lblState.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblState.setText("State :");

        cmbState.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbStateActionPerformed(evt);
            }
        });

        lblCity.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblCity.setText("City :");

        lblAddress.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblAddress.setText("Address :");

        txtAddress.setColumns(20);
        txtAddress.setRows(2);
        scpAddress.setViewportView(txtAddress);

        lblImage.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblImage.setText("Image :");

        lblPincode.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblPincode.setText("Pincode :");
        lblPincode.setRequestFocusEnabled(false);

        lblEmailId.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblEmailId.setText("Email Id :");

        fcImage.setApproveButtonToolTipText("Only JPEG/JPG Supported ");
        fcImage.setCurrentDirectory(new java.io.File("C:\\"));
            fcImage.setDialogTitle("Select Employee Image (JPEG/JPG)");
            fcImage.setFileFilter(new FileNameExtensionFilter("JPEG file", "jpg", "jpeg"));

            try {
                txtEmailID.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("")));
            } catch (java.text.ParseException ex) {
                ex.printStackTrace();
            }

            txtPincode.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

            javax.swing.GroupLayout pnlInfoLayout = new javax.swing.GroupLayout(pnlInfo);
            pnlInfo.setLayout(pnlInfoLayout);
            pnlInfoLayout.setHorizontalGroup(
                pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlInfoLayout.createSequentialGroup()
                    .addContainerGap(365, Short.MAX_VALUE)
                    .addComponent(txtEmailID, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(70, 70, 70))
                .addGroup(pnlInfoLayout.createSequentialGroup()
                    .addGap(124, 124, 124)
                    .addGroup(pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(cmbCity, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmbState, 0, 128, Short.MAX_VALUE)
                            .addComponent(txtPincode)))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlInfoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pnlInfoLayout.createSequentialGroup()
                                .addGroup(pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(pnlInfoLayout.createSequentialGroup()
                                        .addComponent(lblFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(12, 12, 12)
                                        .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(pnlInfoLayout.createSequentialGroup()
                                        .addComponent(lblDOB, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(dtDOB, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addComponent(lblMiddleName, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlInfoLayout.createSequentialGroup()
                                .addGroup(pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(lblPincode, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblState, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblCity, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(156, 156, 156)
                                .addGroup(pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblEmailId, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblImage, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(pnlInfoLayout.createSequentialGroup()
                                .addComponent(txtMiddleName, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lblLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(scpAddress)
                            .addComponent(fcImage, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                        .addContainerGap(68, Short.MAX_VALUE)))
            );
            pnlInfoLayout.setVerticalGroup(
                pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlInfoLayout.createSequentialGroup()
                    .addContainerGap(58, Short.MAX_VALUE)
                    .addComponent(txtEmailID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(8, 8, 8)
                    .addComponent(cmbState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(cmbCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(txtPincode, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(22, 22, 22))
                .addGroup(pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlInfoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblMiddleName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMiddleName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDOB, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dtDOB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblEmailId, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(pnlInfoLayout.createSequentialGroup()
                                .addGroup(pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblState, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblCity, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(scpAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPincode, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblImage, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fcImage, javax.swing.GroupLayout.PREFERRED_SIZE, 35, Short.MAX_VALUE))
                        .addContainerGap()))
            );

            pnlContent.add(pnlInfo, java.awt.BorderLayout.PAGE_START);

            lblMachines.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
            lblMachines.setText("Machines :");
            lblMachines.setRequestFocusEnabled(false);

            pnlMachines.setAutoscrolls(true);

            javax.swing.GroupLayout pnlMachinesLayout = new javax.swing.GroupLayout(pnlMachines);
            pnlMachines.setLayout(pnlMachinesLayout);
            pnlMachinesLayout.setHorizontalGroup(
                pnlMachinesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGap(0, 654, Short.MAX_VALUE)
            );
            pnlMachinesLayout.setVerticalGroup(
                pnlMachinesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGap(0, 0, Short.MAX_VALUE)
            );

            javax.swing.GroupLayout pnlAllocationLayout = new javax.swing.GroupLayout(pnlAllocation);
            pnlAllocation.setLayout(pnlAllocationLayout);
            pnlAllocationLayout.setHorizontalGroup(
                pnlAllocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlAllocationLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(lblMachines, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(pnlMachines, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap())
            );
            pnlAllocationLayout.setVerticalGroup(
                pnlAllocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlAllocationLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(pnlAllocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(pnlMachines, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnlAllocationLayout.createSequentialGroup()
                            .addComponent(lblMachines, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(0, 44, Short.MAX_VALUE)))
                    .addContainerGap())
            );

            pnlContent.add(pnlAllocation, java.awt.BorderLayout.CENTER);

            btnSave.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
            btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/save-icon.png"))); // NOI18N
            btnSave.setText("Save");
            btnSave.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btnSaveActionPerformed(evt);
                }
            });

            btnReset.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
            btnReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/clear-icon.png"))); // NOI18N
            btnReset.setText("Clear");
            btnReset.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btnResetActionPerformed(evt);
                }
            });

            lblError.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
            lblError.setForeground(java.awt.Color.red);

            javax.swing.GroupLayout pnlButtonsLayout = new javax.swing.GroupLayout(pnlButtons);
            pnlButtons.setLayout(pnlButtonsLayout);
            pnlButtonsLayout.setHorizontalGroup(
                pnlButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlButtonsLayout.createSequentialGroup()
                    .addGap(119, 119, 119)
                    .addComponent(btnSave)
                    .addGap(18, 18, 18)
                    .addComponent(btnReset)
                    .addContainerGap(482, Short.MAX_VALUE))
                .addComponent(lblError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            );
            pnlButtonsLayout.setVerticalGroup(
                pnlButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlButtonsLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(pnlButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnSave)
                        .addComponent(btnReset))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(lblError, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            );

            pnlContent.add(pnlButtons, java.awt.BorderLayout.PAGE_END);

            getContentPane().add(pnlContent, java.awt.BorderLayout.CENTER);

            pack();
        }// </editor-fold>//GEN-END:initComponents

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        cmbCity.setSelectedIndex(0);
        cmbState.setSelectedIndex(0);
        txtFirstName.setText("");
        txtMiddleName.setText("");
        txtLastName.setText("");
        txtEmailID.setText("");
        txtPincode.setText("");
        txtAddress.setText("");
        dtDOB.setDate(null);
        lblError.setText("");
        bgMachines.clearSelection();
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        loadError("");
        if (saveEmployee()) {
            JOptionPane.showMessageDialog(this, "Employee saved successfully", "Success", JOptionPane.INFORMATION_MESSAGE);
            btnReset.doClick();
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void cmbStateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbStateActionPerformed
       loadCity();
    }//GEN-LAST:event_cmbStateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmEmployee().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgMachines;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox<String> cmbCity;
    private javax.swing.JComboBox<String> cmbState;
    private org.jdesktop.swingx.JXDatePicker dtDOB;
    private javax.swing.JFileChooser fcImage;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblDOB;
    private javax.swing.JLabel lblEmailId;
    private javax.swing.JLabel lblError;
    private javax.swing.JLabel lblFirstName;
    private javax.swing.JLabel lblHeader;
    private javax.swing.JLabel lblImage;
    private javax.swing.JLabel lblLastName;
    private javax.swing.JLabel lblMachines;
    private javax.swing.JLabel lblMiddleName;
    private javax.swing.JLabel lblPincode;
    private javax.swing.JLabel lblState;
    private javax.swing.JPanel pnlAllocation;
    private javax.swing.JPanel pnlButtons;
    private javax.swing.JPanel pnlContent;
    private javax.swing.JPanel pnlInfo;
    private javax.swing.JPanel pnlMachines;
    private javax.swing.JScrollPane scpAddress;
    private javax.swing.JTextArea txtAddress;
    private javax.swing.JFormattedTextField txtEmailID;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextField txtMiddleName;
    private javax.swing.JFormattedTextField txtPincode;
    // End of variables declaration//GEN-END:variables
   
    
    private void loadError(String message){
        lblError.setText(message);
    }

    private boolean saveEmployee() {
         if (! Validate()) return false;
        try {
            String firstName = txtFirstName.getText().trim();
            String middleName = txtMiddleName.getText().trim();
            String lastName = txtLastName.getText().trim();
            String emailId = txtEmailID.getText().trim();
            String city = cmbCity.getSelectedItem().toString();
            String state = cmbState.getSelectedItem().toString();
            String address = txtAddress.getText();
            int pincode = txtPincode.getText().trim().isEmpty() ? 0 : Integer.parseInt(txtPincode.getText().trim());
            
            if (0 == employeeId)
                employeeController.addEmployee(firstName, middleName, lastName, address, city, state, pincode, dtDOB.getDate(), emailId);
            else {
                employeeController.editEmployee(employeeId, firstName, middleName, lastName, address, city, state, pincode, dtDOB.getDate(), emailId);
            }
            return true;
        } catch (Exception ex) {
            loadError(ex.getMessage()); 
            Logger.getLogger(this.getClass().getName()).log(Level.SEVERE, null, ex);
            return false;
        }
    }
    
     private boolean Validate() {
        if (txtFirstName.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(this, "Please enter first name", "Error", JOptionPane.ERROR_MESSAGE);
            txtFirstName.requestFocus();
            return false;
        }
        if (txtLastName.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(this, "Please enter last name", "Error", JOptionPane.ERROR_MESSAGE);
            txtLastName.requestFocus();
            return false;
        }
        if (cmbState.getSelectedIndex() <= 0){
            JOptionPane.showMessageDialog(this, "Please select state ", "Error", JOptionPane.ERROR_MESSAGE);
            cmbState.requestFocus();
            return false;
        }
        if (cmbCity.getSelectedIndex() <= 0){
            JOptionPane.showMessageDialog(this, "Please select city ", "Error", JOptionPane.ERROR_MESSAGE);
            cmbCity.requestFocus();
            return false;
        }
        return true;
    }

    private void loadComponents() {
        loadState();
        loadEmployee();
    }

    private void loadEmployee() {
        if (employeeId <= 0) return;
       
        try {
            Employee employee = employeeController.getEmployee(employeeId);
            
            if (employee == null) throw new IllegalStateException("Employee details not found. Please try again or contact administrator");
            
          //  setComboIndex(cmbState, employee.getState());
           // setComboIndex(cmbCity, employee.getCity());
            txtFirstName.setText(employee.getFirstName());
            txtMiddleName.setText(employee.getMiddleName());
            txtLastName.setText(employee.getLastName());
            txtEmailID.setText(employee.getEmailId());
            txtAddress.setText(employee.getAddress());
            txtPincode.setText(String.valueOf(employee.getPincode()));
            dtDOB.setDate(employee.getDateOfBirth());
            
        } catch (Exception ex) {
            loadError(ex.getMessage()); 
            Logger.getLogger(this.getClass().getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadState() {
       //locationController.getState();
    }

    private void loadCity() {
        if (cmbState.getSelectedIndex() <= 0) return;
        
      //  locationController.getCity(cmbState.getSelectedItem().toString());
    }
     
}
